from tokenizer.tokens import *


class Parser:
    """Parser class for the language.
        Uses a list of tokens generated by a Tokenizer object.
        Produces an abstract syntax tree, using the Node class hierarchy. #TODO à revérifier
    """

    def __init__(self, tokenized_program : list[Token]):
        self.tokenized_program = tokenized_program

    def parse(self):
        pass


#AST_Node class
#AbstractSyntaxTree class inherits from AST_Node
#all nodes store the token used to create the node
# node types : block (AbstractSyntaxTree en est une spécialisation), assignment, if, binaryOperation, functionCall (autres spécifiques à demande et affiche?), expression (tous à réfléchir)